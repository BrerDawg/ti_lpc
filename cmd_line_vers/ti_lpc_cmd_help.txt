Texas Instruments LPC Voice Synthesizer Decoder (e.g: Speak and Spell) v1.01

Minimal parameter checks are performed, params are delimited by spaces, therefore, do not use spaces in filenames or strings on the command line.

Anything before a colon is ignored when strings are rendered, this allows a convenient name to be at head of each string.

Some commands use default values if none are specified.

Pick the chip def file which sounds best.

A hex string file is generated after render of audio, named: 'zzzlast_utter_strhex.txt'

Ubuntu users could add this to end of command to hear audio: && aplay zzzout.wav

Invocation Examples:

ti_lpc_cmd -help
ti_lpc_cmd --help

ti_lpc_cmd mode=romlist rom0=tmc0351n2l.vsm rom1=tmc0352n2l.vsm fnameout=zzzaddr_list.txt			//dump list of words found in rom to text file (default fname is zzzaddr_list.txt), this list can be wrong for many roms as their organisation is unknown
																									//dump formatted as  'address' 'word'   like so:            6a8d isle
																									//see 'mode=rendaddrfileseq' option for sequential playing of this file

ti_lpc_cmd mode=romlist rom0=tmc0351n2l.vsm rom1=tmc0352n2l.vsm fnameout=zzzaddr_list.txt verb=on 	//with verbose enabled for detailed output


ti_lpc_cmd mode=render chip=tms5100.txt rom0=tmc0351n2l.vsm rom1=tmc0352n2l.vsm wav=zzzout.wav gain=75 addr=12a1	 	//render using chip def 'tms5100.txt' and rom hex address 12a1 to audio file with gain of 75% (gain default is 75, and limits are between 0-->300)

ti_lpc_cmd mode=render chip=tms5100.txt rom0=tmc0351n2l.vsm rom1=tmc0352n2l.vsm addr=1600	 				//render using rom hex address 1600 to default audio file named 'zzzout.wav'

ti_lpc_cmd mode=render chip=tms5100.txt rom0=tmc0351n2l.vsm rom1=tmc0352n2l.vsm srate=8000 addr=1198	 	//render and rom hex address 1198 to audio file with samplerate of 8KHz (srate default is 48KHz, limits are between 4000-->192000)

ti_lpc_cmd mode=render chip=tms5200.txt wav=zzzout.wav str=45,36,126,14,3,255...7,40 						//render decimal string to audio file (no roms req, strings must not have spaces)
ti_lpc_cmd mode=render chip=tms5100.txt str=isle:45,36,126,14,3,255...12,255 						//render decimal string to audio file (str has word label prefixed before colon and is ignored)

ti_lpc_cmd mode=render chip=tms5220.txt strhex=45,36,AE,D5,0x56,A7...,AE,D5 						//render hex string to audio file


ti_lpc_cmd mode=render chip=tms5220.txt filt=off strhex=45,36,AE,D5,0x56,A7...03,DF 				//render hex string to audio file (without lattice filtering)


ti_lpc_cmd mode=render chip=tms5100.txt strhex=4D,E6,C8,C2,91,8F,BB,9C,72,89,98,84,35,7D,D5,12,D6,98,5A,FA,E2,C1,94,71,0F,B7,D9,8D,09,9F,61,66,B7,13,E3,D3,4D,BC,1F,05,46,9E,AB,65,AD,0E,86,5E,53,F5,2A,EB,BD,CB,F4,B8,9B,96,14,9F,4B,52,2D,C4,B5,2B,CF,74,8A,8B,62,11,1D,EB,D4,E4,CC,34,6B,D2,69,C5,85,9B,D6,A5,3B,CF,8E,BE,4C,E5,A6,CE,9B,6F,78,C9,6B,08,94,FB,FE,F2,2B,CF,D9,54,F7,B4,F4,00




ti_lpc_cmd mode=render chip=tms5100.txt str=isle:69,171,54,174,213,86,167,62,202,212,42,238,150,115,213,85,87,95,115,156,107,145,30,39,251,4,159,52,163,198,206,137,41,154,165,95,236,19,115,114,13,207,39,55,222,126,70,50,25,41,250,250,140,32,178,154,125,243,154,137,123,143,112,239,54,19,243,57,165,222,105,70,26,59,130,187,243,172,115,204,64,162,67,68,74,159,118,62,0,0,149,171,54,174,213,86,167,62,202,212,42,238,150,115,213,85,87,95,115,156,107,145,30,39,251,4,159,52,163,198,206,137,41,154,165,95,236,19,115,114,13,207

ti_lpc_cmd mode=render chip=tms5220.txt strhex=twenty:0x01,0x98,0xD1,0xC2,0x00,0xCD,0xA4,0x32,0x20,0x79,0x13,0x04,0x28,0xE7,0x92,0xDC,0x70,0xCC,0x5D,0xDB,0x76,0xF3,0xD2,0x32,0x0B,0x0B,0x5B,0xC3,0x2B,0xCD,0xD4,0xDD,0x23,0x35,0xAF,0x44,0xE1,0xF0,0xB0,0x6D,0x3C,0xA9,0xAD,0x3D,0x35,0x0E,0xF1,0x0C,0x8B,0x28,0xF7,0x34,0x01,0x68,0x22,0xCD,0x00,0xC7,0xA4,0x04,0xBB,0x32,0xD6,0xAC,0x56,0x9C,0xDC,0xCA,0x28,0x66,0x53,0x51,0x70,0x2B,0xA5,0xBC,0x0D,0x9A,0xC1,0xEB,0x14,0x73,0x37,0x29,0x19,0xAF,0x33,0x8C,0x3B,0xA7,0x24,0xBC,0x42,0xB0,0xB7,0x59,0x09,0x09,0x3C,0x96,0xE9,0xF4,0x58,0xFF,0x0F0x01,0x98,0xD1,0xC2,0x00,0xCD,0xA4,0x32,0x20,0x79,0x13,0x04,0x28,0xE7,0x92,0xDC,0x70,0xCC,0x5D,0xDB,0x76,0xF3,0xD2,0x32,0x0B,0x0B,0x5B,0xC3,0x2B,0xCD,0xD4,0xDD,0x23,0x35,0xAF,0x44,0xE1,0xF0,0xB0,0x6D,0x3C,0xA9,0xAD,0x3D,0x35,0x0E,0xF1,0x0C,0x8B,0x28,0xF7,0x34,0x01,0x68,0x22,0xCD,0x00,0xC7,0xA4,0x04,0xBB,0x32,0xD6,0xAC,0x56,0x9C,0xDC,0xCA,0x28,0x66,0x53,0x51,0x70,0x2B,0xA5,0xBC,0x0D,0x9A,0xC1,0xEB,0x14,0x73,0x37,0x29,0x19,0xAF,0x33,0x8C,0x3B,0xA7,0x24,0xBC,0x42,0xB0,0xB7,0x59,0x09,0x09,0x3C,0x96,0xE9,0xF4,0x58,0xFF,0x0F



ti_lpc_cmd mode=render chip=tms5220.txt strhex=afternoon:0xC7,0xCE,0xCE,0x3A,0xCB,0x58,0x1F,0x3B,0x07,0x9D,0x28,0x71,0xB4,0xAC,0x9C,0x74,0x5A,0x42,0x55,0x33,0xB2,0x93,0x0A,0x09,0xD4,0xC5,0x9A,0xD6,0x44,0x45,0xE3,0x38,0x60,0x9A,0x32,0x05,0xF4,0x18,0x01,0x09,0xD8,0xA9,0xC2,0x00,0x5E,0xCA,0x24,0xD5,0x5B,0x9D,0x4A,0x95,0xEA,0x34,0xEE,0x63,0x92,0x5C,0x4D,0xD0,0xA4,0xEE,0x58,0x0C,0xB9,0x4D,0xCD,0x42,0xA2,0x3A,0x24,0x37,0x25,0x8A,0xA8,0x8E,0xA0,0x53,0xE4,0x28,0x23,0x26,0x13,0x72,0x91,0xA2,0x76,0xBB,0x72,0x38,0x45,0x0A,0x46,0x63,0xCA,0x69,0x27,0x39,0x58,0xB1,0x8D,0x60,0x1C,0x34,0x1B,0x34,0xC3,0x55,0x8E,0x73,0x45,0x2D,0x4F,0x4A,0x3A,0x26,0x10,0xA1,0xCA,0x2D,0xE9,0x98,0x24,0x0A,0x1E,0x6D,0x97,0x29,0xD2,0xCC,0x71,0xA2,0xDC,0x86,0xC8,0x12,0xA7,0x8E,0x08,0x85,0x22,0x8D,0x9C,0x43,0xA7,0x12,0xB2,0x2E,0x50,0x09,0xEF,0x51,0xC5,0xBA,0x28,0x58,0xAD,0xDB,0xE1,0xFF,0x030xC7,0xCE,0xCE,0x3A,0xCB,0x58,0x1F,0x3B,0x07,0x9D,0x28,0x71,0xB4,0xAC,0x9C,0x74,0x5A,0x42,0x55,0x33,0xB2,0x93,0x0A,0x09,0xD4,0xC5,0x9A,0xD6,0x44,0x45,0xE3,0x38,0x60,0x9A,0x32,0x05,0xF4,0x18,0x01,0x09,0xD8,0xA9,0xC2,0x00,0x5E,0xCA,0x24,0xD5,0x5B,0x9D,0x4A,0x95,0xEA,0x34,0xEE,0x63,0x92,0x5C,0x4D,0xD0,0xA4,0xEE,0x58,0x0C,0xB9,0x4D,0xCD,0x42,0xA2,0x3A,0x24,0x37,0x25,0x8A,0xA8,0x8E,0xA0,0x53,0xE4,0x28,0x23,0x26,0x13,0x72,0x91,0xA2,0x76,0xBB,0x72,0x38,0x45,0x0A,0x46,0x63,0xCA,0x69,0x27,0x39,0x58,0xB1,0x8D,0x60,0x1C,0x34,0x1B,0x34,0xC3,0x55,0x8E,0x73,0x45,0x2D,0x4F,0x4A,0x3A,0x26,0x10,0xA1,0xCA,0x2D,0xE9,0x98,0x24,0x0A,0x1E,0x6D,0x97,0x29,0xD2,0xCC,0x71,0xA2,0xDC,0x86,0xC8,0x12,0xA7,0x8E,0x08,0x85,0x22,0x8D,0x9C,0x43,0xA7,0x12,0xB2,0x2E,0x50,0x09,0xEF,0x51,0xC5,0xBA,0x28,0x58,0xAD,0xDB,0xE1,0xFF,0x03.0xC7,0xCE,0xCE,0x3A,0xCB,0x58,0x1F,0x3B,0x07,0x9D,0x28,0x71,0xB4,0xAC,0x9C,0x74,0x5A,0x42,0x55,0x33,0xB2,0x93,0x0A,0x09,0xD4,0xC5,0x9A,0xD6,0x44,0x45,0xE3,0x38,0x60,0x9A,0x32,0x05,0xF4,0x18,0x01,0x09,0xD8,0xA9,0xC2,0x00,0x5E,0xCA,0x24,0xD5,0x5B,0x9D,0x4A,0x95,0xEA,0x34,0xEE,0x63,0x92,0x5C,0x4D,0xD0,0xA4,0xEE,0x58,0x0C,0xB9,0x4D,0xCD,0x42,0xA2,0x3A,0x24,0x37,0x25,0x8A,0xA8,0x8E,0xA0,0x53,0xE4,0x28,0x23,0x26,0x13,0x72,0x91,0xA2,0x76,0xBB,0x72,0x38,0x45,0x0A,0x46,0x63,0xCA,0x69,0x27,0x39,0x58,0xB1,0x8D,0x60,0x1C,0x34,0x1B,0x34,0xC3,0x55,0x8E,0x73,0x45,0x2D,0x4F,0x4A,0x3A,0x26,0x10,0xA1,0xCA,0x2D,0xE9,0x98,0x24,0x0A,0x1E,0x6D,0x97,0x29,0xD2,0xCC,0x71,0xA2,0xDC,0x86,0xC8,0x12,0xA7,0x8E,0x08,0x85,0x22,0x8D,0x9C,0x43,0xA7,0x12,0xB2,0x2E,0x50,0x09,0xEF,0x51,0xC5,0xBA,0x28,0x58,0xAD,0xDB,0xE1,0xFF,0x03


ti_lpc_cmd mode=cleanbrace fnamein=Vocab_US_Large.cpp fnameout=Vocab_US_Large_str_clean.txt				//clean a file keeping only what's within braces, useful for extracing strings embeded in c code such as found in Talkie prj on github

ti_lpc_cmd mode=cleanquote fnamein=a_quote_hex_string_file.txt fnameout=a_hex_string_file.txt			//clean a file keeping only what's within quotes





ti_lpc_cmd mode=rendaddrfileseq chip=tms5100.txt rom0=tmc0351n2l.vsm rom1=tmc0352n2l.vsm fnamein=zzzaddr_list.txt line=0	 		//render rom addr (from spec fnamein) using spec line index (will store line index incremented by 1 in 'zzzline_index.txt'), zero based index, so 0 is the first line in file, see also 'mode=romlist' option

ti_lpc_cmd mode=rendaddrfileseq chip=tms5100.txt rom0=tmc0351n2l.vsm rom1=tmc0352n2l.vsm fnamein=zzzaddr_list.txt	 				//render rom addr (from spec fnamein) using a line index from file 'zzzline_index.txt', will incremented this index and store back to same 'zzzline_index.txt', useful to sequentially progress though a long list of addresses in a file

ti_lpc_cmd mode=rendaddrfileseq chip=tms5100.txt rom0=tmc0351n2l.vsm rom1=tmc0352n2l.vsm fnamein=zzzaddr_list.txt step=-2	 		//render rom addr (from spec fnamein) using a line index from file 'zzzline_index.txt', will decremented this index twice and store back to same 'zzzline_index.txt', useful to sequentially regress though a long list of addresses in a file



ti_lpc_cmd mode=rendstrfileseq chip=tms5220.txt fnamein=Vocab_US_Large_str_clean.txt line=0	 			//render hex string(from spec fnamein) at line index (will store line index incremented by 1 in 'zzzline_index.txt'), zero based index, so 0 is the first line in file

ti_lpc_cmd mode=rendstrfileseq chip=tms5220.txt fnamein=Vocab_US_Large_str_clean.txt	 				//render hex string(from spec fnamein) using a line index from file 'zzzline_index.txt', will incremented this index and store back to same 'zzzline_index.txt', useful to sequentially progress though a long list of string in a file

ti_lpc_cmd mode=rendstrfileseq chip=tms5220.txt fnamein=Vocab_US_Large_str_clean.txt step=-3	 		//render hex string(from spec fnamein) using a line index from file 'zzzline_index.txt', will decremented this index trice and store back to same 'zzzline_index.txt', useful to sequentially regress though a long list of string in a file

